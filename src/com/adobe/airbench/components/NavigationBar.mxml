<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  creationComplete="onCreationComplete();">
	<fx:Script>
		<![CDATA[
			import com.adobe.airbench.model.ModelLocator;
			import com.adobe.airbench.navigation.NavigationInfo;
			
			import spark.components.View;
			import spark.effects.SlideViewTransition;
			
			private var navInfo:NavigationInfo;
			private var _parent:View;
			
			private function onCreationComplete():void
			{
				this._parent = this.findParent();
				this.navInfo = ModelLocator.getInstance().navigationManager.getNavigationInfo(getQualifiedClassName(this._parent));
				if (this.navInfo.previousView == null) this.backButton.visible = false;
				if (this.navInfo.nextView == null) this.nextButton.visible = false;
			}
			
			private function findParent(o:DisplayObject = null):View
			{
				if (o == null) o = this.parent;
				if (o is View)
				{
					return o as View;
				}
				return this.findParent(o.parent);
			}

			private function onPreviousView():void
			{
				View(this._parent).navigator.popView();
			}
			
			private function onNextView():void
			{
				View(this._parent).navigator.pushView(this.navInfo.nextView);
			}
			
			public function set showStatusTest(showStatusText:Boolean):void
			{
				this.testStatus.visible = showStatusText;
				this.testResult.visible = showStatusText;
				if (!showStatusText)
				{
					this.backButton.enabled = true;
					this.nextButton.label = "Next";
				}
			}
			
			public function testComplete(passed:Boolean, resultMessage:String = null):void
			{
				if (passed)
				{
					this.testStatus.text = "Test Passed";
					this.testStatus.styleDeclaration.setStyle("color", 0x00ff00);
				}
				else
				{
					this.testStatus.text = "Test Failed";
					this.testStatus.styleDeclaration.setStyle("color", 0xff0000);
				}

				if (resultMessage == null)
				{
					this.testResult.visible = false;
				}
				else
				{
					this.testResult.text = resultMessage;
				}
				
				this.backButton.enabled = true;
				this.nextButton.label = "Next";
			}
		]]>
	</fx:Script>
	<s:Button id="backButton" label="Back" click="onPreviousView();" enabled="false"/>
	<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Label id="testStatus" text="Running test..." color="0xffffff"/>
		<s:Label id="testResult" text="" color="0xffffff" fontSize="18"/>
	</s:VGroup>
	<s:Button id="nextButton" label="Skip" click="onNextView();" enabled="true"/>
</s:HGroup>
