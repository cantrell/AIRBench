<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="com.adobe.airbench.components.*"
		title="Geolocation"
		viewActivate="onViewActivate();"
		viewDeactivate="onViewDeactivate();">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.airbench.model.ModelLocator;
			
			import flash.sensors.Geolocation;
			
			private const GEOLOCATION:String = "geolocation";
			private var ml:ModelLocator;
			private var geo:Geolocation;
			private var updateCalled:Boolean;
			private var timer:Timer;
			
			private function onViewActivate():void
			{
				this.ml = ModelLocator.getInstance();
				this.updateCalled = false;
				if (!Geolocation.isSupported)
				{
					this.ml.testManager.reportCapabilitiesTestResults(GEOLOCATION, false, "Geolocation not supported.");
					this.navBar.testComplete(false, "Geolocation unsupported");
					return;
				}
				this.testGeolocation();
			}
			
			private function onViewDeactivate():void
			{
				this.stopTimer();
				this.stopGeolocation();
			}

			private function stopGeolocation():void
			{
				if (this.geo != null)
				{
					this.geo.removeEventListener(GeolocationEvent.UPDATE, onUpdate);
					this.geo.removeEventListener(StatusEvent.STATUS, onStatus);
					this.geo = null;
				}
			}
			
			private function testGeolocation():void
			{
				this.geo = new Geolocation();
				this.geo.addEventListener(GeolocationEvent.UPDATE, onUpdate);
				this.geo.addEventListener(StatusEvent.STATUS, onStatus);
				this.stopTimer();
				this.timer = new Timer((60 * 1000) * 2); // two minutes
				this.timer.addEventListener(TimerEvent.TIMER, checkSuccess);
				this.timer.start();
			}
			
			private function stopTimer():void
			{
				if (this.timer != null)
				{
					this.timer.stop();
					this.timer.removeEventListener(TimerEvent.TIMER, checkSuccess);
					this.timer = null;
				}
			}
			
			private function checkSuccess(e:TimerEvent):void
			{
				if (!this.updateCalled)
				{
					this.stopTimer();
					this.stopGeolocation();
					this.ml.testManager.reportCapabilitiesTestResults(GEOLOCATION, false, "Geolocation timed out.");
					this.navBar.testComplete(false, "Geolocation timed out");
				}
			}
			
			private function onUpdate(e:GeolocationEvent):void
			{
				this.latitude.text = String(e.latitude);
				this.longitude.text = String(e.longitude);
				this.altitude.text = String(e.altitude);
				this.heading.text = String(e.heading);
				this.speed.text = String(e.speed);
				this.horizontalAccuracy.text = String(e.horizontalAccuracy);
				this.verticalAccuracy.text = String(e.verticalAccuracy);
				this.timestamp.text = String(e.timestamp);
				if (!this.updateCalled)
				{
					this.updateCalled = true;
					this.stopTimer();
					this.ml.testManager.reportCapabilitiesTestResults(GEOLOCATION, true, "Geolocation data available.");
					this.navBar.testComplete(true, "Geolocation works!");
				}
			}
			
			private function onStatus(e:StatusEvent):void
			{
				if (!this.geo) return;
				if (this.geo.muted)
				{
					this.stopTimer();
					this.ml.testManager.reportCapabilitiesTestResults(GEOLOCATION, false, "Geolocation is muted.");
					this.navBar.testComplete(false, "Geolocation muted");
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%">
		<s:Scroller width="100%" height="100%">
			<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:VGroup width="50%" height="100%" verticalAlign="middle" horizontalAlign="right" gap="20">
					<s:Label text="Latitude:"/>	
					<s:Label text="Longitude:"/>	
					<s:Label text="Altitude:"/>	
					<s:Label text="Heading:"/>	
					<s:Label text="Speed:"/>	
					<s:Label text="Horizontal Accuracy:"/>	
					<s:Label text="Vertical Accuracy:"/>	
					<s:Label text="Timestamp:"/>	
				</s:VGroup>
				<s:VGroup width="50%" height="100%" verticalAlign="middle" horizontalAlign="left" gap="20">
					<s:Label id="latitude" text="0"/>	
					<s:Label id="longitude" text="0"/>	
					<s:Label id="altitude" text="0"/>	
					<s:Label id="heading" text="0"/>	
					<s:Label id="speed" text="0"/>	
					<s:Label id="horizontalAccuracy" text="0"/>	
					<s:Label id="verticalAccuracy" text="0"/>	
					<s:Label id="timestamp" text="0"/>	
				</s:VGroup>
			</s:HGroup>
		</s:Scroller>
		<components:NavigationBar id="navBar" width="100%"/>
	</s:VGroup>
</s:View>
