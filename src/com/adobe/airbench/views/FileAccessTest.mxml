<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="com.adobe.airbench.components.*"
		title="File Access"
		viewActivate="onViewActivate();"
		viewDeactivate="onViewDeactivate();">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.airbench.model.ModelLocator;
			
			private const FILE_ACCESS:String = "file_access";
			private var ml:ModelLocator;
			private var size:uint = 1024 * 1024; // one MB
			private const TEST_FILE_NAME:String = "test_file.bin";
			private var startTime:Number;
			
			private function onViewActivate():void
			{
				this.ml = ModelLocator.getInstance();
				var kb:String = String(size / 1024) + " KB";
				this.description.text = this.description.text.replace("$1", kb);
				
				this.startTime = new Date().time;

				var ba:ByteArray = new ByteArray();
				ba.length = size;
				var f:File = File.applicationStorageDirectory.resolvePath(TEST_FILE_NAME);
				var fs:FileStream = new FileStream();
				fs.open(f, FileMode.WRITE);
				fs.writeBytes(ba);
				fs.close();
				fs = null;
				ba.clear();
				ba = null;
				f = null;
				
				f = File.applicationStorageDirectory.resolvePath(TEST_FILE_NAME);
				fs = new FileStream();
				fs.addEventListener(Event.COMPLETE, onReadComplete);
				fs.openAsync(f, FileMode.READ);
			}
			
			private function onReadComplete(e:Event):void
			{
				var fs:FileStream = e.target as FileStream;
				fs.removeEventListener(Event.COMPLETE, onReadComplete);
				var ba:ByteArray = new ByteArray();
				fs.readBytes(ba);
				fs.close();
				
				var f:File = File.applicationStorageDirectory.resolvePath(TEST_FILE_NAME);
				f.addEventListener(Event.COMPLETE, onFileDeleted);
				f.deleteFileAsync();
			}
			
			private function onFileDeleted(e:Event):void
			{
				var f:File = e.target as File;
				f.removeEventListener(Event.COMPLETE, onFileDeleted);

				var totalTime:Number = new Date().time - this.startTime;
				
				this.output.text = "Total time: " + String(totalTime) + " ms";
				this.ml.testManager.reportPerformanceTestResults(FILE_ACCESS, totalTime, "File access tests took " + String(totalTime) + " ms.");
				this.navBar.testComplete(true, "Test Complete");
			}
			
			private function onViewDeactivate():void
			{
			}

		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<s:Scroller width="100%" height="100%">
			<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="20">
				<components:MultiLineLabel id="description" text="This test measures how long it takes to write, read, and delete a $1 file."/>
				<s:Label id="output" fontWeight="bold"/>
			</s:VGroup>
		</s:Scroller>
		<components:NavigationBar id="navBar" width="100%"/>
	</s:VGroup>
</s:View>